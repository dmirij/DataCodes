library(tidyverse)
id <- c(1,2,3)
name <- c('Steph','Pilou','Valentin')
users <- data.frame(id,name)
users
print(users)
date_d <- rep('2023-10-01',times = 3)
date_d
user_id <- c(2,3,NA)
purchases <- data.frame(id,date_d,user_id)
print(purchases)
library(sqldf)
install.packages('sqldf')
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("sqldf")
library(sqldf)
id <- c(1,2,3)
name <- c('Steph','Pilou','Valentin')
users <- data.frame(id,name)
print(users)
date_d <- rep('2023-10-01',times = 3)
user_id <- c(2,3,NA)
purchases <- data.frame(id,date_d,user_id)
print(purchases)
sqldf("select * from users
where
id not  in (select user_id from purchases)")
sqldf("select * from users
where
id in (select user_id from purchases)")
sqldf("select * from users
where
id not in (select user_id from purchases)")
sqldf("select * from users
where
id in (select user_id from purchases)")
user_id <- c(2,3,NULL)
sqldf("select * from users
where
id in (select user_id from purchases)")
sqldf("select * from users
where
id NOT in (select user_id from purchases)")
user_id
purchases
sqldf("-- select * from users
-- where
-- id NOT in
(select user_id from purchases)")
sqldf("-- select * from users
-- where
-- id NOT in
-- (
select user_id from purchases
-- )")
# This is Dina's Climate Stripe code using data from Berkeley Earth -------
library(tidyverse)
library(scico)
install.packages(scico)
install.packages("scico")
install.packages("zoo")
library(scico)
library(zoo)
# Data downloaded on 6/22/2021 from http://berkeleyearth.lbl.gov/auto/Local/TAVG/Text/40.99N-44.73E-TAVG-Trend.txt
yerevan_berkeley <- read.delim("https://data.berkeleyearth.org/auto/Local/TAVG/Text/40.99N-44.73E-TAVG-Trend.txt")
yerevan_berkeley
rm(yerevan_berkeley)
# Get local summary of land-surface temperature results produced by the Berkeley Earth averaging method for Yerevan, Armenia
yerevan <- read.delim("https://data.berkeleyearth.org/auto/Local/TAVG/Text/40.99N-44.73E-TAVG-Trend.txt")
head(yerevan)
months_vector  <- (yerevan_berkeley[51, 1] %>%
str_split("    "))[[1]][2:13] %>%
trimws(which = "both", whitespace = "[ \t\r\n]")
# extract monthly average temperature for baseline ------------------------
months_vector  <- (yerevan[51, 1] %>%
str_split("    "))[[1]][2:13] %>%
trimws(which = "both", whitespace = "[ \t\r\n]")
months_vector
temps_vector   <- (yerevan[52, 1] %>%
str_split("  "))[[1]][4:15] %>%
trimws(which = "both", whitespace = "[ \t\r\n]")
temps_vector
monthly_temps_base <- data.frame(month = months_vector, temperature = as.numeric(temps_vector))
monthly_temps_base
# extract year, month, monthly anomaly as my raw data ---------------------
extract_monthly <- function(stringy) {
monthly_temp <- (str_split(stringy, "  "))[[1]][c(2, 4, 6)] %>%
trimws(which = "both", whitespace = "[ \t\r\n]")
}
yerevan_monthly <- as_tibble(t(sapply(yerevan[69:2960, ], extract_monthly, simplify = TRUE, USE.NAMES = FALSE)))
t(sapply(yerevan[69:2960, ], extract_monthly, simplify = TRUE, USE.NAMES = FALSE))
head(t(sapply(yerevan[69:2960, ], extract_monthly, simplify = TRUE, USE.NAMES = FALSE)))
yerevan_monthly <- as_tibble(t
(sapply(yerevan[69:2960, ],
extract_monthly,
simplify = TRUE,
USE.NAMES = FALSE)
),
.name_repair = 'unique')
head(yerevan_monthly)
colnames(yerevan_monthly) <- c("year", "month", "num")
yerevan_monthly$month <- as.integer(yerevan_monthly$month)
yerevan_monthly$num <- as.numeric(yerevan_monthly$num)
head(yerevan_monthly)
# Find year starting which there is complete data -------------------------
year_list <- table(yerevan_monthly$year) %>%
names()
year_list
for (yearStart in rev(year_list)) {
my_flag <- yerevan_monthly %>%
filter(year == yearStart) %>%
subset(is.na(num) == TRUE) %>%
count()
if (my_flag != 0) {
break
}
}
yerevan_monthly_yearStart <- yerevan_monthly %>%
filter(year >= as.character(as.integer(yearStart) +1))
yerevan_monthly_yearStart
yearStart
yerevan_monthly_yearStart
# actual monthly temperatures starting from yearStart ----------------------
yerevan_monthly_yearStart <- yerevan_monthly_yearStart %>%
add_column(Temperature =1)
monthly_temps_base <- monthly_temps_base %>%
add_column(monthNum = 1:12)
for (mname in 1:12) {
yerevan_monthly_yearStart <- yerevan_monthly_yearStart %>%
mutate(Temperature = ifelse(month == mname,
num + (monthly_temps_base %>%
filter(monthNum == mname))$temperature,
Temperature)
)
}
head(yerevan_monthly_yearStart)
yerevan_monthly_yearStart <- yerevan_monthly_yearStart %>%
add_column(Temperature =1)
yerevan <- read.delim("https://data.berkeleyearth.org/auto/Local/TAVG/Text/40.99N-44.73E-TAVG-Trend.txt")
# extract monthly average temperature for baseline ------------------------
months_vector  <- (yerevan[51, 1] %>%
str_split("    "))[[1]][2:13] %>%
trimws(which = "both", whitespace = "[ \t\r\n]")
temps_vector   <- (yerevan[52, 1] %>%
str_split("  "))[[1]][4:15] %>%
trimws(which = "both", whitespace = "[ \t\r\n]")
monthly_temps_base <- data.frame(month = months_vector, temperature = as.numeric(temps_vector))
# extract year, month, monthly anomaly (this is a difference in temperature not the actual temperature) as my raw data ---------------------
extract_monthly <- function(stringy) {
monthly_temp <- (str_split(stringy, "  "))[[1]][c(2, 4, 6)] %>%
trimws(which = "both", whitespace = "[ \t\r\n]")
}
yerevan_monthly <- as_tibble(t
(sapply(yerevan[69:2960, ],
extract_monthly,
simplify = TRUE,
USE.NAMES = FALSE)
),
.name_repair = 'unique')
colnames(yerevan_monthly) <- c("year", "month", "num")
yerevan_monthly$month <- as.integer(yerevan_monthly$month)
yerevan_monthly$num <- as.numeric(yerevan_monthly$num)
# Find year starting which there is complete data -------------------------
# Get full range of years
year_list <- table(yerevan_monthly$year) %>%
names()
# Write loop to find the year after which there are no NAs
for (yearStart in rev(year_list)) {    # loop year_list form latest year to earliest year
my_flag <- yerevan_monthly %>%
filter(year == yearStart) %>%
subset(is.na(num) == TRUE) %>%
count()
if (my_flag != 0) {
break
}
}
yerevan_monthly_yearStart <- yerevan_monthly %>%
filter(year >= as.character(as.integer(yearStart) +1))
# actual monthly temperatures starting from yearStart ----------------------
# Calculate the actual temperature for each month
yerevan_monthly_yearStart <- yerevan_monthly_yearStart %>%
add_column(Temperature =1)
monthly_temps_base <- monthly_temps_base %>%
add_column(monthNum = 1:12)
for (mname in 1:12) {
yerevan_monthly_yearStart <- yerevan_monthly_yearStart %>%
mutate(Temperature = ifelse(month == mname,
num + (monthly_temps_base %>%
filter(monthNum == mname))$temperature,
Temperature)
)
}
head(yerevan_monthly_yearStart)
monthly_temps_base
head(yerevan_monthly_yearStart)
head(monthly_temps_base)
head(yerevan_monthly_yearStart)
# yearly average from monthly temperatures --------------------------------
yerevan_yearly_yearStart <- as.data.frame(yerevan_monthly_yearStart %>%
group_by(year) %>%
summarise(Temperature = mean(Temperature)))
yerevan_yearly_yearStart_anom <- as.data.frame(yerevan_monthly_yearStart %>%
group_by(year) %>%
summarise(num = mean(num)))
theme1_stripe <- theme_minimal() +
theme(axis.text.x = element_text(size = 10, vjust = 5),
axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_text(),
plot.title = element_text(size = 15, face = "bold")
)
ggplot(data = yerevan_yearly_yearStart_anom, aes(x = as.numeric(year), y = 1, fill = num)) +
geom_bar(stat = "identity") +
scale_fill_scico(palette = "vik",name ="\u00B0C") +
ggtitle("Climate Stripes Yerevan, Armenia") +
theme1_stripe
head(yerevan_yearly_yearStart_anom)
head(yerevan_monthly_yearStart)
head(yerevan_yearly_yearStart)
#ggplot(data = yerevan_yearly_yearStart_anom, aes(x = as.numeric(year), y = 1, fill = num)) +
ggplot(data = yerevan_yearly_yearStart_anom, aes(x = as.numeric(year), y = 1, fill = Temperature)) +
geom_bar(stat = "identity") +
scale_fill_scico(palette = "vik",name ="\u00B0C") +
ggtitle("Climate Stripes Yerevan, Armenia") +
theme1_stripe
#ggplot(data = yerevan_yearly_yearStart_anom, aes(x = as.numeric(year), y = 1, fill = num)) +
ggplot(data = yerevan_yearly_yearStart, aes(x = as.numeric(year), y = 1, fill = Temperature)) +
geom_bar(stat = "identity") +
scale_fill_scico(palette = "vik",name ="\u00B0C") +
ggtitle("Climate Stripes Yerevan, Armenia") +
theme1_stripe
theme1_stripe <- theme_minimal() +
theme(axis.text.x = element_text(size = 10, vjust = 5),
axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_text(),
plot.title = element_text(size = 15, face = "bold")
)
ggplot(data = yerevan_yearly_yearStart, aes(x = as.numeric(year), y = 1, fill = Temperature)) +
geom_bar(stat = "identity") +
scale_fill_scico(palette = "vik",name ="\u00B0C") +
ggtitle("Climate Stripes Yerevan, Armenia") +
theme1_stripe
ggsave("Yerevan_climate_stripe_legend.png")
getwd()
setwd(/Users/dinamirijanian/Projects/DataCodes/CLIMATE_STRIPE)
setwd("/Users/dinamirijanian/Projects/DataCodes/CLIMATE_STRIPE")
ggsave("Yerevan_climate_stripe_nolegend.png")
theme1_stripe <- theme_minimal() +
theme(axis.text.x = element_text(size = 10, vjust = 5),
axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_text(),
plot.title = element_text(size = 15, face = "bold")
)
ggplot(data = yerevan_yearly_yearStart, aes(x = as.numeric(year), y = 1, fill = Temperature)) +
geom_bar(stat = "identity") +
scale_fill_scico(palette = "vik",name ="\u00B0C") +
ggtitle("Climate Stripes Yerevan, Armenia") +
theme1_stripe
ggsave("Yerevan_climate_stripe_legend.png")
ls -ltr
ls -ltr
ggplot(data = yerevan_yearly_yearStart, aes(x = as.numeric(year), y = 1, fill = Temperature)) +
geom_bar(stat = "identity") +
#scale_fill_scico(palette = "vik",name ="\u00B0C") +
scale_fill_scico(palette = "vik") +
ggtitle("Climate Stripes Yerevan, Armenia") +
theme1_stripe
scico(10, palette = 'grayC')
# Climate Stripe graph of yearly average temperature with legends ---------------------------
theme1_stripe <- theme_minimal() +
theme(axis.text.x = element_text(size = 10, vjust = 5),
axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_text(color = "#6C6C6C"),
plot.title = element_text(size = 15, face = "bold")
)
ggplot(data = yerevan_yearly_yearStart, aes(x = as.numeric(year), y = 1, fill = Temperature)) +
geom_bar(stat = "identity") +
scale_fill_scico(palette = "vik",name ="\u00B0C") +
ggtitle("Climate Stripes Yerevan, Armenia") +
theme1_stripe
ggsave("Yerevan_climate_stripe_legend.png")
# Climate Stripe graph of yearly average temperature with legends ---------------------------
theme1_stripe <- theme_minimal() +
theme(axis.text.x = element_text(color = "#6C6C6C",size = 10, vjust = 5),
axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_text(color = "#6C6C6C"),
plot.title = element_text(color = "#6C6C6C",size = 15, face = "bold")
)
ggplot(data = yerevan_yearly_yearStart, aes(x = as.numeric(year), y = 1, fill = Temperature)) +
geom_bar(stat = "identity") +
scale_fill_scico(palette = "vik",name ="\u00B0C") +
ggtitle("Climate Stripes Yerevan, Armenia") +
theme1_stripe
ggsave("Yerevan_climate_stripe_legend.png")
# Climate Stripe graph of yearly average temperature with legends ---------------------------
theme1_stripe <- theme_minimal() +
theme(axis.text.x = element_text(color = "#6C6C6C",size = 10, vjust = 5),
axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_text(color = "#6C6C6C"),
legend.text = element_text(color = "#6C6C6C"),
plot.title = element_text(color = "#6C6C6C",size = 15, face = "bold")
)
ggplot(data = yerevan_yearly_yearStart, aes(x = as.numeric(year), y = 1, fill = Temperature)) +
geom_bar(stat = "identity") +
scale_fill_scico(palette = "vik",name ="\u00B0C") +
ggtitle("Climate Stripes Yerevan, Armenia") +
theme1_stripe
ggsave("Yerevan_climate_stripe_legend.png")
theme2_stripe <- theme_minimal() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
plot.title = element_text(color = "#6C6C6C",size = 15, face = "bold")
)
ggplot(data = yerevan_yearly_yearStart_anom, aes(x = as.numeric(year), y = 1, fill = num)) +
geom_bar(stat = "identity",show.legend = FALSE) +
scale_fill_scico(palette = "vik") +
ggtitle("Climate Stripes Yerevan, Armenia") +
theme2_stripe
ggsave("Yerevan_climate_stripe_nolegend.png")
ggsave("Yerevan_climate_stripe_nolegend.png")
theme3_stripe <- theme_minimal() +
theme(axis.text.x = element_text(size = 10, vjust = 5),
axis.text.y = element_text(size = 10),
axis.line.y = element_blank(),
axis.title.y =  element_text(size = 13),
axis.title.x =  element_blank(),
panel.grid.major = element_line(color = "grey",size=0.25,linetype = "dashed"),
plot.title = element_text(size = 15, face = "bold"),
legend.position = c(0.15, 0.95)
)
